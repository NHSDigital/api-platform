name: Lint

on: push

jobs:
  build:
    name: lint and tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function
      
      - name: Install Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      
      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install poetry
        run: pip install poetry

      - name: Cache poetry packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-cache-poetry-packages-${{ hashFiles('**/poetry.lock') }}

      - name: Install poetry packages
        run: poetry install

      - name: Lint python
        run: poetry run flake8 **/*.py

      # - name: Install Terraform
      #   uses: little-core-labs/install-terraform@v1

      # - name: Install Apigee Provider
      #   run: |
      #     mkdir -p ~/.terraform.d/plugins
      #     wget https://github.com/zambien/terraform-provider-apigee/releases/download/v0.0.21/terraform-provider-apigee_0.0.21_linux_amd64.tar.gz -O ~/.terraform.d/plugins/terraform.tar.gz
      #     tar -xzf ~/.terraform.d/plugins/terraform.tar.gz -C ~/.terraform.d/plugins
      #     ls ~/.terraform.d/plugins

      # - name: Initialise Terraform
      #   run: terraform init -backend=false

      # - name: Validate Terraform Files
      #   run: terraform validate

      - name: Set SPEC_VERSION env var
        run: echo ::set-env name=SPEC_VERSION::$(poetry run python scripts/calculate_version.py)

      - name: Create release (master only)
        id: create-release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SPEC_VERSION }}
          release_name: ${{ env.SPEC_VERSION }}
